{"ast":null,"code":"import _objectSpread from\"C:/laragon/www/Tunegie/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(null);const[loading,setLoading]=useState(true);// API base URL - use current domain in production, localhost in development\nconst API_BASE=process.env.NODE_ENV==='production'?'':'http://localhost:8000';useEffect(()=>{// Check for stored token on app load\nconst storedToken=localStorage.getItem('tunegie_token');const storedUser=localStorage.getItem('tunegie_user');if(storedToken&&storedUser){try{setToken(storedToken);setUser(JSON.parse(storedUser));}catch(error){console.error('Error parsing stored user data:',error);localStorage.removeItem('tunegie_token');localStorage.removeItem('tunegie_user');}}setLoading(false);},[]);const login=async(email,password)=>{try{const response=await fetch(\"\".concat(API_BASE,\"/backend/php/api/auth/login.php\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});const data=await response.json();if(!response.ok){throw new Error(data.error||'Login failed');}setToken(data.token);setUser(data.user);localStorage.setItem('tunegie_token',data.token);localStorage.setItem('tunegie_user',JSON.stringify(data.user));return{success:true,user:data.user};}catch(error){console.error('Login error:',error);return{success:false,error:error.message};}};const register=async(username,email,password)=>{try{const response=await fetch(\"\".concat(API_BASE,\"/backend/php/api/auth/register.php\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,email,password})});const data=await response.json();if(!response.ok){throw new Error(data.error||'Registration failed');}setToken(data.token);setUser(data.user);localStorage.setItem('tunegie_token',data.token);localStorage.setItem('tunegie_user',JSON.stringify(data.user));return{success:true,user:data.user};}catch(error){console.error('Registration error:',error);return{success:false,error:error.message};}};const logout=()=>{setUser(null);setToken(null);localStorage.removeItem('tunegie_token');localStorage.removeItem('tunegie_user');};const isAuthenticated=()=>{return user!==null&&token!==null;};const updateUser=updatedUserData=>{const newUser=_objectSpread(_objectSpread({},user),updatedUserData);setUser(newUser);localStorage.setItem('tunegie_user',JSON.stringify(newUser));};const value={user,token,loading,login,register,logout,isAuthenticated,updateUser,API_BASE};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","token","setToken","loading","setLoading","API_BASE","process","env","NODE_ENV","storedToken","localStorage","getItem","storedUser","JSON","parse","error","console","removeItem","login","email","password","response","fetch","concat","method","headers","body","stringify","data","json","ok","setItem","success","message","register","username","logout","isAuthenticated","updateUser","updatedUserData","newUser","_objectSpread","value","Provider"],"sources":["C:/laragon/www/Tunegie/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // API base URL - use current domain in production, localhost in development\r\n  const API_BASE = process.env.NODE_ENV === 'production' \r\n    ? '' \r\n    : 'http://localhost:8000';\r\n\r\n  useEffect(() => {\r\n    // Check for stored token on app load\r\n    const storedToken = localStorage.getItem('tunegie_token');\r\n    const storedUser = localStorage.getItem('tunegie_user');\r\n    \r\n    if (storedToken && storedUser) {\r\n      try {\r\n        setToken(storedToken);\r\n        setUser(JSON.parse(storedUser));\r\n      } catch (error) {\r\n        console.error('Error parsing stored user data:', error);\r\n        localStorage.removeItem('tunegie_token');\r\n        localStorage.removeItem('tunegie_user');\r\n      }\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/backend/php/api/auth/login.php`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Login failed');\r\n      }\r\n\r\n      setToken(data.token);\r\n      setUser(data.user);\r\n      \r\n      localStorage.setItem('tunegie_token', data.token);\r\n      localStorage.setItem('tunegie_user', JSON.stringify(data.user));\r\n\r\n      return { success: true, user: data.user };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/backend/php/api/auth/register.php`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Registration failed');\r\n      }\r\n\r\n      setToken(data.token);\r\n      setUser(data.user);\r\n      \r\n      localStorage.setItem('tunegie_token', data.token);\r\n      localStorage.setItem('tunegie_user', JSON.stringify(data.user));\r\n\r\n      return { success: true, user: data.user };\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('tunegie_token');\r\n    localStorage.removeItem('tunegie_user');\r\n  };\r\n\r\n  const isAuthenticated = () => {\r\n    return user !== null && token !== null;\r\n  };\r\n\r\n  const updateUser = (updatedUserData) => {\r\n    const newUser = { ...user, ...updatedUserData };\r\n    setUser(newUser);\r\n    localStorage.setItem('tunegie_user', JSON.stringify(newUser));\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    isAuthenticated,\r\n    updateUser,\r\n    API_BASE\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}