{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import itunesApiService from'../services/itunesApi';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TrackPlayer=_ref=>{let{track,difficulty='medium',onSnippetEnd}=_ref;const[isPlaying,setIsPlaying]=useState(false);const[currentTime,setCurrentTime]=useState(0);const[hasPlayed,setHasPlayed]=useState(false);const[audioReady,setAudioReady]=useState(false);const[audioError,setAudioError]=useState(null);const[previewInfo,setPreviewInfo]=useState(null);// Get snippet duration based on difficulty\nconst getSnippetDuration=difficulty=>{switch(difficulty){case'easy':return 10;case'hard':return 2;case'medium':default:return 5;}};const snippetDuration=getSnippetDuration(difficulty);const[snippetStart,setSnippetStart]=useState(()=>{// Start at random position within 30-second preview\nconst previewDuration=30;const maxStart=previewDuration-snippetDuration;// Ensure we don't go past preview\nreturn Math.floor(Math.random()*Math.max(0,maxStart));});const audioRef=useRef(null);const intervalRef=useRef(null);const snippetTimeoutRef=useRef(null);// Fetch preview URL when component loads\nuseEffect(()=>{const fetchPreview=async()=>{if(!track)return;try{var _track$artists,_track$artists$;console.log(\"\\uD83C\\uDFB5 Fetching preview for \\\"\".concat(track.title,\"\\\" by \").concat((_track$artists=track.artists)===null||_track$artists===void 0?void 0:(_track$artists$=_track$artists[0])===null||_track$artists$===void 0?void 0:_track$artists$.name,\"...\"));const fetchedPreviewInfo=await itunesApiService.getTrackPreviewInfo(track);if(fetchedPreviewInfo.canPreview&&fetchedPreviewInfo.previewUrl){setPreviewInfo(fetchedPreviewInfo);setAudioReady(true);setAudioError(null);console.log('✅ Preview found:',fetchedPreviewInfo.actualTrack,'from',fetchedPreviewInfo.source);}else{setAudioError('No preview available for this track');setAudioReady(false);setPreviewInfo(null);console.warn('⚠️ No preview URL available');}}catch(error){console.error('❌ Failed to fetch preview:',error);setAudioError(error.message);setAudioReady(false);}};fetchPreview();// Capture ref values at the time the effect runs\nconst currentAudio=audioRef.current;const currentInterval=intervalRef.current;const currentSnippetTimeout=snippetTimeoutRef.current;// Cleanup on unmount\nreturn()=>{if(currentAudio){currentAudio.pause();}if(currentInterval){clearInterval(currentInterval);}if(currentSnippetTimeout){clearTimeout(currentSnippetTimeout);}};},[track]);// Reset when track or difficulty changes\nuseEffect(()=>{setIsPlaying(false);setCurrentTime(0);setHasPlayed(false);setPreviewInfo(null);// Generate new random start position within preview\nconst previewDuration=30;const maxStart=previewDuration-snippetDuration;const randomStart=Math.floor(Math.random()*Math.max(0,maxStart));setSnippetStart(randomStart);if(audioRef.current){audioRef.current.pause();}},[track===null||track===void 0?void 0:track.id,snippetDuration]);// Play real audio preview\nconst playSnippet=async()=>{if(!track||!audioRef.current){console.error('❌ No track or audio ref available');return;}if(!(previewInfo!==null&&previewInfo!==void 0&&previewInfo.previewUrl)||!audioReady){console.warn('⚠️ No preview URL available for this track');setAudioError('No preview available for this track');return;}try{setIsPlaying(true);setHasPlayed(true);setCurrentTime(0);const audio=audioRef.current;// Set up audio source and properties\naudio.src=previewInfo.previewUrl;audio.volume=0.8;audio.preload='auto';// Wait for audio to load enough data\nawait new Promise((resolve,reject)=>{const onCanPlay=()=>{audio.removeEventListener('canplay',onCanPlay);audio.removeEventListener('error',onError);resolve();};const onError=e=>{audio.removeEventListener('canplay',onCanPlay);audio.removeEventListener('error',onError);reject(new Error('Audio failed to load'));};audio.addEventListener('canplay',onCanPlay);audio.addEventListener('error',onError);// If already ready, resolve immediately\nif(audio.readyState>=3){audio.removeEventListener('canplay',onCanPlay);audio.removeEventListener('error',onError);resolve();}});// Set start time within preview\naudio.currentTime=snippetStart;await audio.play();// Track progress with more precise timing\nconst startTime=performance.now();const trackProgress=()=>{if(!isPlaying)return;const elapsed=(performance.now()-startTime)/1000;if(elapsed>=snippetDuration){setCurrentTime(snippetDuration);stopSnippet();if(onSnippetEnd)onSnippetEnd();return;}setCurrentTime(elapsed);requestAnimationFrame(trackProgress);};requestAnimationFrame(trackProgress);// Safety timeout to stop after exactly 5 seconds\nsnippetTimeoutRef.current=setTimeout(()=>{stopSnippet();if(onSnippetEnd)onSnippetEnd();},snippetDuration*1000);}catch(error){console.error('🔴 Audio playback failed:',error);setAudioError('Playback failed: '+error.message);setIsPlaying(false);}};const stopSnippet=()=>{setIsPlaying(false);// Stop audio playback\nif(audioRef.current&&!audioRef.current.paused){audioRef.current.pause();}// Clear timeout\nif(snippetTimeoutRef.current){clearTimeout(snippetTimeoutRef.current);snippetTimeoutRef.current=null;}};const togglePlayback=()=>{if(isPlaying){stopSnippet();}else{playSnippet();}};const generateNewSnippet=()=>{if(isPlaying){stopSnippet();}// Shuffle within the 30-second preview\nconst previewDuration=30;const maxStart=previewDuration-snippetDuration;const newRandomStart=Math.floor(Math.random()*Math.max(0,maxStart));setSnippetStart(newRandomStart);setCurrentTime(0);// Automatically play the new snippet\nsetTimeout(()=>playSnippet(),100);};// Cleanup interval on unmount\nuseEffect(()=>{// Capture ref value at the time the effect runs\nconst currentInterval=intervalRef.current;return()=>{if(currentInterval){clearInterval(currentInterval);}};},[]);const formatTime=seconds=>{return\"\".concat(Math.floor(seconds),\"s\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-black/50 rounded-lg p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-green-200/60 text-sm\",children:\"Audio Snippet\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-green-400 font-semibold text-lg\",children:(_track$album=>{const albumTitle=(track===null||track===void 0?void 0:(_track$album=track.album)===null||_track$album===void 0?void 0:_track$album.title)||'Unknown Album';const trackTitle=(track===null||track===void 0?void 0:track.title)||'';// Enhanced single detection - same logic as in Game.js\nconst isSingle=albumTitle.toLowerCase().includes('single')||albumTitle.toLowerCase()===trackTitle.toLowerCase()||albumTitle.toLowerCase().includes(' - single')||albumTitle.toLowerCase().includes('(single)')||albumTitle.toLowerCase().includes('- ep')||albumTitle.toLowerCase().includes('(ep)')||// Check if album title contains the track title (likely a single)\nalbumTitle.toLowerCase().includes(trackTitle.toLowerCase())||// Check if track title contains album title (reverse case)\ntrackTitle.toLowerCase().includes(albumTitle.toLowerCase())||// Common single indicators\nalbumTitle.toLowerCase().includes('remix')||albumTitle.toLowerCase().includes('feat.')||albumTitle.toLowerCase().includes('featuring')||// If album has very few tracks, likely a single/EP\nalbumTitle.split(' ').length<=3;return isSingle?'Single Release':albumTitle;})()}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-green-200/80 text-xs mt-1\",children:[\"Playing from 0:\",snippetStart.toString().padStart(2,'0'),\" - 0:\",(snippetStart+snippetDuration).toString().padStart(2,'0')]})]}),audioError&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 p-2 bg-red-600/20 border border-red-500/30 rounded\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-red-300 text-xs\",children:[\"\\u274C \",audioError]})}),audioReady&&(previewInfo===null||previewInfo===void 0?void 0:previewInfo.previewUrl)&&!audioError&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 p-2 bg-green-600/20 border border-green-500/30 rounded\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-green-300 text-xs\",children:[\"\\uD83C\\uDFB5 Audio preview ready! Click play to hear \",snippetDuration,\" seconds.\"]})}),!previewInfo&&!audioError&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 p-2 bg-yellow-600/20 border border-yellow-500/30 rounded\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-yellow-300 text-xs\",children:\"\\uD83D\\uDD0D Searching for preview across multiple sources...\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-4 justify-center mb-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:togglePlayback,className:\"w-16 h-16 rounded-full flex items-center justify-center text-2xl font-bold transition \".concat(isPlaying?'bg-red-600 hover:bg-red-500 text-white':'bg-green-600 hover:bg-green-500 text-black'),title:isPlaying?'Stop':hasPlayed?'Play Again':\"Play \".concat(snippetDuration,\"s Snippet\"),children:isPlaying?'⏹️':'▶️'}),hasPlayed&&/*#__PURE__*/_jsx(\"button\",{onClick:generateNewSnippet,className:\"w-16 h-16 rounded-full flex items-center justify-center text-xl font-bold transition bg-blue-600 hover:bg-blue-500 text-white\",title:\"Play Different Part of Song\",children:\"\\uD83D\\uDD00\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-700 rounded-full h-2 mb-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-500 h-2 rounded-full transition-all duration-100\",style:{width:\"\".concat(currentTime/snippetDuration*100,\"%\")}})}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-green-300 text-sm\",children:[formatTime(currentTime),\" / \",formatTime(snippetDuration)]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-600/20 border border-green-500/30 rounded-lg p-3 mt-4\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-green-300 text-xs\",children:[audioReady&&previewInfo!==null&&previewInfo!==void 0&&previewInfo.previewUrl?/*#__PURE__*/_jsxs(_Fragment,{children:[\"\\uD83C\\uDFB5 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Audio Preview:\"}),\" 30-second snippet ready to play!\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[\"\\u26A0\\uFE0F \",/*#__PURE__*/_jsx(\"strong\",{children:\"No Audio:\"}),\" Preview not available for this track.\"]}),hasPlayed&&/*#__PURE__*/_jsx(\"span\",{className:\"block mt-1\",children:\"Listen carefully and make your best guess!\"})]})}),hasPlayed&&/*#__PURE__*/_jsx(\"p\",{className:\"text-green-400 text-sm mt-3\",children:\"\\u2728 Snippet played! Now make your guess based on what you heard\"})]}),/*#__PURE__*/_jsx(\"audio\",{ref:audioRef,style:{display:'none'},onEnded:stopSnippet,crossOrigin:\"anonymous\"})]});};export default TrackPlayer;","map":{"version":3,"names":["React","useState","useRef","useEffect","itunesApiService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TrackPlayer","_ref","track","difficulty","onSnippetEnd","isPlaying","setIsPlaying","currentTime","setCurrentTime","hasPlayed","setHasPlayed","audioReady","setAudioReady","audioError","setAudioError","previewInfo","setPreviewInfo","getSnippetDuration","snippetDuration","snippetStart","setSnippetStart","previewDuration","maxStart","Math","floor","random","max","audioRef","intervalRef","snippetTimeoutRef","fetchPreview","_track$artists","_track$artists$","console","log","concat","title","artists","name","fetchedPreviewInfo","getTrackPreviewInfo","canPreview","previewUrl","actualTrack","source","warn","error","message","currentAudio","current","currentInterval","currentSnippetTimeout","pause","clearInterval","clearTimeout","randomStart","id","playSnippet","audio","src","volume","preload","Promise","resolve","reject","onCanPlay","removeEventListener","onError","e","Error","addEventListener","readyState","play","startTime","performance","now","trackProgress","elapsed","stopSnippet","requestAnimationFrame","setTimeout","paused","togglePlayback","generateNewSnippet","newRandomStart","formatTime","seconds","className","children","_track$album","albumTitle","album","trackTitle","isSingle","toLowerCase","includes","split","length","toString","padStart","onClick","style","width","ref","display","onEnded","crossOrigin"],"sources":["C:/laragon/www/Tunegie/frontend/src/components/TrackPlayer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport itunesApiService from '../services/itunesApi';\r\n\r\nconst TrackPlayer = ({ track, difficulty = 'medium', onSnippetEnd }) => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [hasPlayed, setHasPlayed] = useState(false);\r\n  const [audioReady, setAudioReady] = useState(false);\r\n  const [audioError, setAudioError] = useState(null);\r\n  const [previewInfo, setPreviewInfo] = useState(null);\r\n  \r\n  // Get snippet duration based on difficulty\r\n  const getSnippetDuration = (difficulty) => {\r\n    switch(difficulty) {\r\n      case 'easy': return 10;\r\n      case 'hard': return 2;\r\n      case 'medium':\r\n      default: return 5;\r\n    }\r\n  };\r\n  \r\n  const snippetDuration = getSnippetDuration(difficulty);\r\n  \r\n  const [snippetStart, setSnippetStart] = useState(() => {\r\n    // Start at random position within 30-second preview\r\n    const previewDuration = 30;\r\n    const maxStart = previewDuration - snippetDuration; // Ensure we don't go past preview\r\n    return Math.floor(Math.random() * Math.max(0, maxStart));\r\n  });\r\n  \r\n  const audioRef = useRef(null);\r\n  const intervalRef = useRef(null);\r\n  const snippetTimeoutRef = useRef(null);\r\n\r\n  // Fetch preview URL when component loads\r\n  useEffect(() => {\r\n    const fetchPreview = async () => {\r\n      if (!track) return;\r\n      \r\n      try {\r\n        console.log(`🎵 Fetching preview for \"${track.title}\" by ${track.artists?.[0]?.name}...`);\r\n        \r\n        const fetchedPreviewInfo = await itunesApiService.getTrackPreviewInfo(track);\r\n        \r\n        if (fetchedPreviewInfo.canPreview && fetchedPreviewInfo.previewUrl) {\r\n          setPreviewInfo(fetchedPreviewInfo);\r\n          setAudioReady(true);\r\n          setAudioError(null);\r\n          console.log('✅ Preview found:', fetchedPreviewInfo.actualTrack, 'from', fetchedPreviewInfo.source);\r\n        } else {\r\n          setAudioError('No preview available for this track');\r\n          setAudioReady(false);\r\n          setPreviewInfo(null);\r\n          console.warn('⚠️ No preview URL available');\r\n        }\r\n      } catch (error) {\r\n        console.error('❌ Failed to fetch preview:', error);\r\n        setAudioError(error.message);\r\n        setAudioReady(false);\r\n      }\r\n    };\r\n\r\n    fetchPreview();\r\n\r\n    // Capture ref values at the time the effect runs\r\n    const currentAudio = audioRef.current;\r\n    const currentInterval = intervalRef.current;\r\n    const currentSnippetTimeout = snippetTimeoutRef.current;\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      if (currentAudio) {\r\n        currentAudio.pause();\r\n      }\r\n      if (currentInterval) {\r\n        clearInterval(currentInterval);\r\n      }\r\n      if (currentSnippetTimeout) {\r\n        clearTimeout(currentSnippetTimeout);\r\n      }\r\n    };\r\n  }, [track]);\r\n\r\n  // Reset when track or difficulty changes\r\n  useEffect(() => {\r\n    setIsPlaying(false);\r\n    setCurrentTime(0);\r\n    setHasPlayed(false);\r\n    setPreviewInfo(null);\r\n    \r\n    // Generate new random start position within preview\r\n    const previewDuration = 30;\r\n    const maxStart = previewDuration - snippetDuration;\r\n    const randomStart = Math.floor(Math.random() * Math.max(0, maxStart));\r\n    setSnippetStart(randomStart);\r\n    \r\n    if (audioRef.current) {\r\n      audioRef.current.pause();\r\n    }\r\n  }, [track?.id, snippetDuration]);\r\n\r\n\r\n  // Play real audio preview\r\n  const playSnippet = async () => {\r\n    if (!track || !audioRef.current) {\r\n      console.error('❌ No track or audio ref available');\r\n      return;\r\n    }\r\n\r\n    if (!previewInfo?.previewUrl || !audioReady) {\r\n      console.warn('⚠️ No preview URL available for this track');\r\n      setAudioError('No preview available for this track');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsPlaying(true);\r\n      setHasPlayed(true);\r\n      setCurrentTime(0);\r\n      \r\n      const audio = audioRef.current;\r\n      \r\n      // Set up audio source and properties\r\n      audio.src = previewInfo.previewUrl;\r\n      audio.volume = 0.8;\r\n      audio.preload = 'auto';\r\n      \r\n      // Wait for audio to load enough data\r\n      await new Promise((resolve, reject) => {\r\n        const onCanPlay = () => {\r\n          audio.removeEventListener('canplay', onCanPlay);\r\n          audio.removeEventListener('error', onError);\r\n          resolve();\r\n        };\r\n        \r\n        const onError = (e) => {\r\n          audio.removeEventListener('canplay', onCanPlay);\r\n          audio.removeEventListener('error', onError);\r\n          reject(new Error('Audio failed to load'));\r\n        };\r\n        \r\n        audio.addEventListener('canplay', onCanPlay);\r\n        audio.addEventListener('error', onError);\r\n        \r\n        // If already ready, resolve immediately\r\n        if (audio.readyState >= 3) {\r\n          audio.removeEventListener('canplay', onCanPlay);\r\n          audio.removeEventListener('error', onError);\r\n          resolve();\r\n        }\r\n      });\r\n      \r\n      // Set start time within preview\r\n      audio.currentTime = snippetStart;\r\n      await audio.play();\r\n      \r\n      // Track progress with more precise timing\r\n      const startTime = performance.now();\r\n      const trackProgress = () => {\r\n        if (!isPlaying) return;\r\n        \r\n        const elapsed = (performance.now() - startTime) / 1000;\r\n        \r\n        if (elapsed >= snippetDuration) {\r\n          setCurrentTime(snippetDuration);\r\n          stopSnippet();\r\n          if (onSnippetEnd) onSnippetEnd();\r\n          return;\r\n        }\r\n        \r\n        setCurrentTime(elapsed);\r\n        requestAnimationFrame(trackProgress);\r\n      };\r\n      \r\n      requestAnimationFrame(trackProgress);\r\n      \r\n      // Safety timeout to stop after exactly 5 seconds\r\n      snippetTimeoutRef.current = setTimeout(() => {\r\n        stopSnippet();\r\n        if (onSnippetEnd) onSnippetEnd();\r\n      }, snippetDuration * 1000);\r\n      \r\n    } catch (error) {\r\n      console.error('🔴 Audio playback failed:', error);\r\n      setAudioError('Playback failed: ' + error.message);\r\n      setIsPlaying(false);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const stopSnippet = () => {\r\n    setIsPlaying(false);\r\n    \r\n    // Stop audio playback\r\n    if (audioRef.current && !audioRef.current.paused) {\r\n      audioRef.current.pause();\r\n    }\r\n    \r\n    // Clear timeout\r\n    if (snippetTimeoutRef.current) {\r\n      clearTimeout(snippetTimeoutRef.current);\r\n      snippetTimeoutRef.current = null;\r\n    }\r\n  };\r\n\r\n  const togglePlayback = () => {\r\n    if (isPlaying) {\r\n      stopSnippet();\r\n    } else {\r\n      playSnippet();\r\n    }\r\n  };\r\n  \r\n  const generateNewSnippet = () => {\r\n    if (isPlaying) {\r\n      stopSnippet();\r\n    }\r\n    \r\n    // Shuffle within the 30-second preview\r\n    const previewDuration = 30;\r\n    const maxStart = previewDuration - snippetDuration;\r\n    const newRandomStart = Math.floor(Math.random() * Math.max(0, maxStart));\r\n    \r\n    setSnippetStart(newRandomStart);\r\n    setCurrentTime(0);\r\n    \r\n    // Automatically play the new snippet\r\n    setTimeout(() => playSnippet(), 100);\r\n  };\r\n\r\n  // Cleanup interval on unmount\r\n  useEffect(() => {\r\n    // Capture ref value at the time the effect runs\r\n    const currentInterval = intervalRef.current;\r\n    \r\n    return () => {\r\n      if (currentInterval) {\r\n        clearInterval(currentInterval);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const formatTime = (seconds) => {\r\n    return `${Math.floor(seconds)}s`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-black/50 rounded-lg p-6\">\r\n      <div className=\"text-center\">\r\n        <div className=\"mb-4\">\r\n          <p className=\"text-green-200/60 text-sm\">Audio Snippet</p>\r\n          <p className=\"text-green-400 font-semibold text-lg\">\r\n            {(() => {\r\n              const albumTitle = track?.album?.title || 'Unknown Album';\r\n              const trackTitle = track?.title || '';\r\n              \r\n              // Enhanced single detection - same logic as in Game.js\r\n              const isSingle = \r\n                albumTitle.toLowerCase().includes('single') ||\r\n                albumTitle.toLowerCase() === trackTitle.toLowerCase() ||\r\n                albumTitle.toLowerCase().includes(' - single') ||\r\n                albumTitle.toLowerCase().includes('(single)') ||\r\n                albumTitle.toLowerCase().includes('- ep') ||\r\n                albumTitle.toLowerCase().includes('(ep)') ||\r\n                // Check if album title contains the track title (likely a single)\r\n                albumTitle.toLowerCase().includes(trackTitle.toLowerCase()) ||\r\n                // Check if track title contains album title (reverse case)\r\n                trackTitle.toLowerCase().includes(albumTitle.toLowerCase()) ||\r\n                // Common single indicators\r\n                albumTitle.toLowerCase().includes('remix') ||\r\n                albumTitle.toLowerCase().includes('feat.') ||\r\n                albumTitle.toLowerCase().includes('featuring') ||\r\n                // If album has very few tracks, likely a single/EP\r\n                albumTitle.split(' ').length <= 3;\r\n              \r\n              return isSingle ? 'Single Release' : albumTitle;\r\n            })()}\r\n          </p>\r\n          <p className=\"text-green-200/80 text-xs mt-1\">\r\n            Playing from 0:{snippetStart.toString().padStart(2,'0')} - 0:{(snippetStart + snippetDuration).toString().padStart(2,'0')}\r\n          </p>\r\n        </div>\r\n        \r\n        {/* Audio Status */}\r\n        {audioError && (\r\n          <div className=\"mb-4 p-2 bg-red-600/20 border border-red-500/30 rounded\">\r\n            <p className=\"text-red-300 text-xs\">\r\n              ❌ {audioError}\r\n            </p>\r\n          </div>\r\n        )}\r\n        \r\n        {audioReady && previewInfo?.previewUrl && !audioError && (\r\n          <div className=\"mb-4 p-2 bg-green-600/20 border border-green-500/30 rounded\">\r\n            <p className=\"text-green-300 text-xs\">\r\n              🎵 Audio preview ready! Click play to hear {snippetDuration} seconds.\r\n            </p>\r\n          </div>\r\n        )}\r\n        \r\n        {!previewInfo && !audioError && (\r\n          <div className=\"mb-4 p-2 bg-yellow-600/20 border border-yellow-500/30 rounded\">\r\n            <p className=\"text-yellow-300 text-xs\">\r\n              🔍 Searching for preview across multiple sources...\r\n            </p>\r\n          </div>\r\n        )}\r\n        \r\n        \r\n        {/* Play Buttons */}\r\n        <div className=\"flex gap-4 justify-center mb-4\">\r\n          <button\r\n            onClick={togglePlayback}\r\n            className={`w-16 h-16 rounded-full flex items-center justify-center text-2xl font-bold transition ${\r\n              isPlaying\r\n                ? 'bg-red-600 hover:bg-red-500 text-white'\r\n                : 'bg-green-600 hover:bg-green-500 text-black'\r\n            }`}\r\n            title={isPlaying ? 'Stop' : hasPlayed ? 'Play Again' : `Play ${snippetDuration}s Snippet`}\r\n          >\r\n            {isPlaying ? '⏹️' : '▶️'}\r\n          </button>\r\n          \r\n          {hasPlayed && (\r\n            <button\r\n              onClick={generateNewSnippet}\r\n              className=\"w-16 h-16 rounded-full flex items-center justify-center text-xl font-bold transition bg-blue-600 hover:bg-blue-500 text-white\"\r\n              title=\"Play Different Part of Song\"\r\n            >\r\n              🔀\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Progress Bar */}\r\n        <div className=\"mb-2\">\r\n          <div className=\"w-full bg-gray-700 rounded-full h-2 mb-2\">\r\n            <div \r\n              className=\"bg-green-500 h-2 rounded-full transition-all duration-100\"\r\n              style={{ width: `${(currentTime / snippetDuration) * 100}%` }}\r\n            ></div>\r\n          </div>\r\n          <p className=\"text-green-300 text-sm\">\r\n            {formatTime(currentTime)} / {formatTime(snippetDuration)}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Audio Info */}\r\n        <div className=\"bg-green-600/20 border border-green-500/30 rounded-lg p-3 mt-4\">\r\n          <p className=\"text-green-300 text-xs\">\r\n            {audioReady && previewInfo?.previewUrl ? (\r\n              <>🎵 <strong>Audio Preview:</strong> 30-second snippet ready to play!</>\r\n            ) : (\r\n              <>⚠️ <strong>No Audio:</strong> Preview not available for this track.</>\r\n            )}\r\n            {hasPlayed && <span className=\"block mt-1\">Listen carefully and make your best guess!</span>}\r\n          </p>\r\n          \r\n        </div>\r\n\r\n        {hasPlayed && (\r\n          <p className=\"text-green-400 text-sm mt-3\">\r\n            ✨ Snippet played! Now make your guess based on what you heard\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Audio element for preview playback */}\r\n      <audio\r\n        ref={audioRef}\r\n        style={{ display: 'none' }}\r\n        onEnded={stopSnippet}\r\n        crossOrigin=\"anonymous\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrackPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}