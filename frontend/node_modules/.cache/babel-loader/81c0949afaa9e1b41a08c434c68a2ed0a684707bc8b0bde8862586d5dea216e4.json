{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\Tunegie\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // API base URL - use current domain in production, localhost in development\n  const API_BASE = process.env.NODE_ENV === 'production' ? '/api' : 'http://localhost:8000/api';\n  useEffect(() => {\n    // Check for stored token on app load\n    const storedToken = localStorage.getItem('tunegie_token');\n    const storedUser = localStorage.getItem('tunegie_user');\n    if (storedToken && storedUser) {\n      try {\n        setToken(storedToken);\n        setUser(JSON.parse(storedUser));\n      } catch (error) {\n        console.error('Error parsing stored user data:', error);\n        localStorage.removeItem('tunegie_token');\n        localStorage.removeItem('tunegie_user');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await fetch(`${API_BASE}/backend/php/api/auth/login.php`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Login failed');\n      }\n      setToken(data.token);\n      setUser(data.user);\n      localStorage.setItem('tunegie_token', data.token);\n      localStorage.setItem('tunegie_user', JSON.stringify(data.user));\n      return {\n        success: true,\n        user: data.user\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      const response = await fetch(`${API_BASE}/backend/php/api/auth/register.php`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Registration failed');\n      }\n      setToken(data.token);\n      setUser(data.user);\n      localStorage.setItem('tunegie_token', data.token);\n      localStorage.setItem('tunegie_user', JSON.stringify(data.user));\n      return {\n        success: true,\n        user: data.user\n      };\n    } catch (error) {\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('tunegie_token');\n    localStorage.removeItem('tunegie_user');\n  };\n  const isAuthenticated = () => {\n    return user !== null && token !== null;\n  };\n  const updateUser = updatedUserData => {\n    const newUser = {\n      ...user,\n      ...updatedUserData\n    };\n    setUser(newUser);\n    localStorage.setItem('tunegie_user', JSON.stringify(newUser));\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    isAuthenticated,\n    updateUser,\n    API_BASE\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"uAkFQMmIUxfxJcQTEb8tCM/KFt4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","loading","setLoading","API_BASE","process","env","NODE_ENV","storedToken","localStorage","getItem","storedUser","JSON","parse","error","console","removeItem","login","email","password","response","fetch","method","headers","body","stringify","data","json","ok","setItem","success","message","register","username","logout","isAuthenticated","updateUser","updatedUserData","newUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/laragon/www/Tunegie/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // API base URL - use current domain in production, localhost in development\r\n  const API_BASE = process.env.NODE_ENV === 'production' \r\n    ? '/api' \r\n    : 'http://localhost:8000/api';\r\n\r\n  useEffect(() => {\r\n    // Check for stored token on app load\r\n    const storedToken = localStorage.getItem('tunegie_token');\r\n    const storedUser = localStorage.getItem('tunegie_user');\r\n    \r\n    if (storedToken && storedUser) {\r\n      try {\r\n        setToken(storedToken);\r\n        setUser(JSON.parse(storedUser));\r\n      } catch (error) {\r\n        console.error('Error parsing stored user data:', error);\r\n        localStorage.removeItem('tunegie_token');\r\n        localStorage.removeItem('tunegie_user');\r\n      }\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/backend/php/api/auth/login.php`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Login failed');\r\n      }\r\n\r\n      setToken(data.token);\r\n      setUser(data.user);\r\n      \r\n      localStorage.setItem('tunegie_token', data.token);\r\n      localStorage.setItem('tunegie_user', JSON.stringify(data.user));\r\n\r\n      return { success: true, user: data.user };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/backend/php/api/auth/register.php`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Registration failed');\r\n      }\r\n\r\n      setToken(data.token);\r\n      setUser(data.user);\r\n      \r\n      localStorage.setItem('tunegie_token', data.token);\r\n      localStorage.setItem('tunegie_user', JSON.stringify(data.user));\r\n\r\n      return { success: true, user: data.user };\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('tunegie_token');\r\n    localStorage.removeItem('tunegie_user');\r\n  };\r\n\r\n  const isAuthenticated = () => {\r\n    return user !== null && token !== null;\r\n  };\r\n\r\n  const updateUser = (updatedUserData) => {\r\n    const newUser = { ...user, ...updatedUserData };\r\n    setUser(newUser);\r\n    localStorage.setItem('tunegie_user', JSON.stringify(newUser));\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    isAuthenticated,\r\n    updateUser,\r\n    API_BASE\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMkB,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAClD,MAAM,GACN,2BAA2B;EAE/BpB,SAAS,CAAC,MAAM;IACd;IACA,MAAMqB,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IACzD,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAEvD,IAAIF,WAAW,IAAIG,UAAU,EAAE;MAC7B,IAAI;QACFV,QAAQ,CAACO,WAAW,CAAC;QACrBT,OAAO,CAACa,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC,CAAC;MACjC,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvDL,YAAY,CAACO,UAAU,CAAC,eAAe,CAAC;QACxCP,YAAY,CAACO,UAAU,CAAC,cAAc,CAAC;MACzC;IACF;IAEAb,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGjB,QAAQ,iCAAiC,EAAE;QACzEkB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEZ,IAAI,CAACa,SAAS,CAAC;UAAEP,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,MAAMO,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIlC,KAAK,CAACgC,IAAI,CAACZ,KAAK,IAAI,cAAc,CAAC;MAC/C;MAEAb,QAAQ,CAACyB,IAAI,CAAC1B,KAAK,CAAC;MACpBD,OAAO,CAAC2B,IAAI,CAAC5B,IAAI,CAAC;MAElBW,YAAY,CAACoB,OAAO,CAAC,eAAe,EAAEH,IAAI,CAAC1B,KAAK,CAAC;MACjDS,YAAY,CAACoB,OAAO,CAAC,cAAc,EAAEjB,IAAI,CAACa,SAAS,CAACC,IAAI,CAAC5B,IAAI,CAAC,CAAC;MAE/D,OAAO;QAAEgC,OAAO,EAAE,IAAI;QAAEhC,IAAI,EAAE4B,IAAI,CAAC5B;MAAK,CAAC;IAC3C,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,OAAO;QAAEgB,OAAO,EAAE,KAAK;QAAEhB,KAAK,EAAEA,KAAK,CAACiB;MAAQ,CAAC;IACjD;EACF,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,QAAQ,EAAEf,KAAK,EAAEC,QAAQ,KAAK;IACpD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGjB,QAAQ,oCAAoC,EAAE;QAC5EkB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEZ,IAAI,CAACa,SAAS,CAAC;UAAEQ,QAAQ;UAAEf,KAAK;UAAEC;QAAS,CAAC;MACpD,CAAC,CAAC;MAEF,MAAMO,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIlC,KAAK,CAACgC,IAAI,CAACZ,KAAK,IAAI,qBAAqB,CAAC;MACtD;MAEAb,QAAQ,CAACyB,IAAI,CAAC1B,KAAK,CAAC;MACpBD,OAAO,CAAC2B,IAAI,CAAC5B,IAAI,CAAC;MAElBW,YAAY,CAACoB,OAAO,CAAC,eAAe,EAAEH,IAAI,CAAC1B,KAAK,CAAC;MACjDS,YAAY,CAACoB,OAAO,CAAC,cAAc,EAAEjB,IAAI,CAACa,SAAS,CAACC,IAAI,CAAC5B,IAAI,CAAC,CAAC;MAE/D,OAAO;QAAEgC,OAAO,EAAE,IAAI;QAAEhC,IAAI,EAAE4B,IAAI,CAAC5B;MAAK,CAAC;IAC3C,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,OAAO;QAAEgB,OAAO,EAAE,KAAK;QAAEhB,KAAK,EAAEA,KAAK,CAACiB;MAAQ,CAAC;IACjD;EACF,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBnC,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAAC,IAAI,CAAC;IACdQ,YAAY,CAACO,UAAU,CAAC,eAAe,CAAC;IACxCP,YAAY,CAACO,UAAU,CAAC,cAAc,CAAC;EACzC,CAAC;EAED,MAAMmB,eAAe,GAAGA,CAAA,KAAM;IAC5B,OAAOrC,IAAI,KAAK,IAAI,IAAIE,KAAK,KAAK,IAAI;EACxC,CAAC;EAED,MAAMoC,UAAU,GAAIC,eAAe,IAAK;IACtC,MAAMC,OAAO,GAAG;MAAE,GAAGxC,IAAI;MAAE,GAAGuC;IAAgB,CAAC;IAC/CtC,OAAO,CAACuC,OAAO,CAAC;IAChB7B,YAAY,CAACoB,OAAO,CAAC,cAAc,EAAEjB,IAAI,CAACa,SAAS,CAACa,OAAO,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,KAAK,GAAG;IACZzC,IAAI;IACJE,KAAK;IACLE,OAAO;IACPe,KAAK;IACLe,QAAQ;IACRE,MAAM;IACNC,eAAe;IACfC,UAAU;IACVhC;EACF,CAAC;EAED,oBACEf,OAAA,CAACC,WAAW,CAACkD,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA3C,QAAA,EAChCA;EAAQ;IAAA6C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC/C,GAAA,CAzHWF,YAAY;AAAAkD,EAAA,GAAZlD,YAAY;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}